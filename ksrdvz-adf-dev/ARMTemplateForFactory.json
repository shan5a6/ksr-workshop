{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ksrdvz-adf-dev"
		},
		"destinationservicelink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'destinationservicelink'"
		},
		"sourcedatalink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sourcedatalink'"
		},
		"destinationservicelink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ksrdvzsadev.dfs.core.windows.net/"
		},
		"sourcedatalink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ksrdvzsadev.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "trigger-data-processing",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"injectingsourcedata": {},
									"storetransformeddata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destinationdatalink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destinationservicelink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "dest-cont-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destinationservicelink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourcedata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedatalink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sample_Employees_Data.xlsx",
						"fileSystem": "src-cont-data"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Employee ID",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "Position",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Joining Date",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sourcedatalink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destinationservicelink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('destinationservicelink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('destinationservicelink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourcedatalink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sourcedatalink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sourcedatalink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sourcedata",
								"type": "DatasetReference"
							},
							"name": "injectingsourcedata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "destinationdatalink",
								"type": "DatasetReference"
							},
							"name": "storetransformeddata"
						}
					],
					"transformations": [
						{
							"name": "dataprocess"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Employee ID} as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Department as string,",
						"          Position as string,",
						"          Salary as string,",
						"          {Joining Date} as string,",
						"          Location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> injectingsourcedata",
						"injectingsourcedata select(mapColumn(",
						"          {Employee ID},",
						"          {First Name},",
						"          {Last Name},",
						"          Department,",
						"          Position,",
						"          Salary,",
						"          {Joining Date}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> dataprocess",
						"dataprocess sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> storetransformeddata"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sourcedata')]",
				"[concat(variables('factoryId'), '/datasets/destinationdatalink')]"
			]
		}
	]
}